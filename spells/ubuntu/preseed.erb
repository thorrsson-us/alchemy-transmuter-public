# To do: break this apart into sections as per:
# https://help.ubuntu.com/10.04/installation-guide/i386/preseed-advanced.html
# Section on chainloading


### Localization

# Preseeding only locale sets language, country and locale.
d-i debian-installer/locale string en_US.UTF-8

### Keyboard selection.

# Disable automatic (interactive) keymap detection.
d-i console-setup/ask_detect boolean false
d-i keyboard-configuration/layoutcode string us

### Network configuration
#d-i netcfg/choose_interface select auto
#d-i netcfg/get_hostname string unassigned-hostname
#d-i netcfg/get_domain string unassigned-domain

# Can do some early setup, and even dynamically set debconf! 
# https://help.ubuntu.com/10.04/installation-guide/i386/preseed-advanced.html
# Note that this example doesn't work, because preseed needs network already selected :(
# To do: have this call back to transmuter to indicate that the install has started
# d-i preseed/early_command string debconf-set netcfg/choose_interface "$(ip route show  | grep default | cut -d ' ' -f 5)"

# Keyboard selection
d-i keyboard-configuration/layoutcode string us
d-i keyboard-configuration/variantcode string 

# Controls whether or not the hardware clock is set to UTC
d-i clock-setup/utc boolean true
# You may set this to any valid setting for $TZ; see the contents of
# /usr/share/zoneinfo/ for valid values
d-i time/zone string UTC
# Controls whether to use NTP to set the clock during the install
d-i clock-setup/ntp boolean true
d-i clock-setup/ntp-server string time-c.nist.gov

# Account setup
d-i passwd/root-login boolean false
d-i passwd/user-fullname string Console User
d-i passwd/username string console
d-i passwd/user-password-crypted password <%= opts['console_pass'] %>
d-i user-setup/encrypt-home boolean false


# If you select ftp, the mirror/country string does not need to be set
# Location: http://boot.smidsrod.lan/ubuntu-12.04-server-amd64/
d-i mirror/country string manual
d-i mirror/http/proxy string


### Partitioning

# Forcefully nuke from orbit any existing LVM setup, since ubuntu can't properly destroy existing multi-disk LVM installs
# Heck, lets zero out the first GB while we're at it. That should get rid of those pesky partition tables
# https://help.ubuntu.com/10.04/installation-guide/i386/preseed-advanced.html
d-i partman/early_command string \
  for root in $(vgdisplay | grep "VG Name" | tr -s " " : | cut -d : -f 4); do vgremove -f $root; done; \
  for device in $(pvdisplay | grep "PV Name" | tr -s " " : | cut -d : -f 4); do pvremove -f -f -y $device; done; \
  for device in $(ls -1 /sys/class/block/ | grep 'sd[a-z]$'); do dd if=/dev/zero of=/dev/$device bs=1042 count=1000000; done


d-i partman-auto/disk string /dev/sda
d-i partman-auto/method string lvm
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-auto/purge_lvm_from_device  boolean true
d-i partman-auto-lvm/guided_size string max
d-i partman-auto-lvm/new_vg_name string lvroot

d-i partman-auto/choose_recipe select lvroot

di-i partman-auto/expert_recipe string            \
  lvroot ::                                       \
    20000 20000 20000 ext4                        \
      $lvmok{ }                                   \
      $primary{ } $bootable{ }                    \
      method{ format } format{ }                  \
      use_filesystem{ } filesystem{ ext4 }        \
      mountpoint{ / }                             \
    .                                             \
    30000 300000 3000000 ext4                      \
      $lvmok{ }                                   \
      method{ format } format{ }                  \
      use_filesystem{ } filesystem{ ext4 }        \
      mountpoint{ /u }                            \
    .                                             \
<%= opts['swapsize'] %>  <%= opts['swapsize'] %> <%= opts['swapsize'] %> linux-swap  \
      $lvmok{ }                                   \
      method{ swap } format{ }                    \
    .

d-i partman-auto-lvm/no_boot boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
 
## Controlling how partitions are mounted
 
d-i partman/mount_style select uuid

# Package selection

### Apt setup
d-i apt-setup/universe boolean true

### Package selection
#tasksel tasksel/first multiselect ubuntu-server openssh-server # looks like this does fuck all in 12.04
tasksel tasksel/first multiselect Basic Ubuntu server, OpenSSH server

d-i pkgsel/include string openssh-server
d-i pkgsel/upgrade select none

d-i pkgsel/update-policy select none

d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true

### Finishing up the installation
d-i finish-install/reboot_in_progress note

### X configuration
xserver-xorg xserver-xorg/autodetect_monitor boolean false

# Disable quickboot because ubuntu 14.04 breaks unattended startup on LVM installs:
# https://bugs.launchpad.net/ubuntu/+source/grub2/+bug/1274320

# We then have to update apt in order to use ubuntu's servers
# Then we add a callback to rc local so that we know when the server has booted.

d-i preseed/late_command string \
  in-target sed -i 's/^\(quick_boot=\)"1"/\1"0"/g' /etc/grub.d/10_linux; \
  in-target sed -i 's/^\(GRUB_CMDLINE_LINUX_DEFAULT=\)"\(.*\)"/\1"\2 net.ifnames=1 biosdevname=0"/g' /etc/default/grub; \
  in-target update-grub; \
  echo "deb http://archive.ubuntu.com/ubuntu/ <%= opts['codename'] %> main universe multiverse" > /target/etc/apt/sources.list; \
  echo "deb http://archive.ubuntu.com/ubuntu/ <%= opts['codename'] %>-updates main universe multiverse" >>  /target/etc/apt/sources.list; \
  echo "deb http://archive.canonical.com/ubuntu <%= opts['codename'] %> partner" >>  /target/etc/apt/sources.list; \
  echo "deb http://security.ubuntu.com/ubuntu <%= opts['codename'] %>-security main universe multiverse"  >>  /target/etc/apt/sources.list; \
  echo "curl 'http://<%= opts['transmuter-hostaddr'] %>/spell/notify?sku=<%=opts['sku']%>&message=osloaded'" > /target/etc/rc.local; \
  in-target apt-get -qq update;

